<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>搜索 on To Mars</title><link>https://www.tomars.cv/categories/%E6%90%9C%E7%B4%A2/</link><description>Recent content in 搜索 on To Mars</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sat, 16 Sep 2017 22:16:33 +0000</lastBuildDate><atom:link href="https://www.tomars.cv/categories/%E6%90%9C%E7%B4%A2/index.xml" rel="self" type="application/rss+xml"/><item><title>ES搜索分桶的一种思路</title><link>https://www.tomars.cv/post/es%E6%90%9C%E7%B4%A2%E5%88%86%E6%A1%B6%E7%9A%84%E4%B8%80%E7%A7%8D%E6%80%9D%E8%B7%AF/</link><pubDate>Sat, 16 Sep 2017 22:16:33 +0000</pubDate><guid>https://www.tomars.cv/post/es%E6%90%9C%E7%B4%A2%E5%88%86%E6%A1%B6%E7%9A%84%E4%B8%80%E7%A7%8D%E6%80%9D%E8%B7%AF/</guid><description>&lt;p>一个简化版的有赞搜索实践。&lt;/p>
&lt;!-- more -->
&lt;p>感谢@有赞 提供的思路，可以去看这篇文章：&lt;a href="http://tech.youzan.com/you_zan_searchengine2/">有赞搜索引擎实践&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>实际上想达到店铺去重的效果通过分桶搜索是很容易做的事情. 我们假设每页搜索20个结果, 我们把索引库分成4个桶, 每个商品对桶数取模得到所在桶的编号. 这样可以保证同一店铺的商品仅在一个桶里面.&lt;/p></description></item><item><title>线上Elasticsearch集群升级到5.X版本</title><link>https://www.tomars.cv/post/%E7%BA%BF%E4%B8%8Aelasticsearch%E9%9B%86%E7%BE%A4%E5%8D%87%E7%BA%A7%E5%88%B05-x%E7%89%88%E6%9C%AC/</link><pubDate>Thu, 22 Dec 2016 01:04:10 +0000</pubDate><guid>https://www.tomars.cv/post/%E7%BA%BF%E4%B8%8Aelasticsearch%E9%9B%86%E7%BE%A4%E5%8D%87%E7%BA%A7%E5%88%B05-x%E7%89%88%E6%9C%AC/</guid><description>&lt;p>本文记录了将Elasticserach集群从&lt;code>2.3.3&lt;/code>升级到&lt;code>5.0.2&lt;/code>过程当中的一些坑。&lt;/p>
&lt;!-- more -->
&lt;h2 id="elasticsearch">Elasticsearch&lt;/h2>
&lt;p>官方提供了升级Elasticsearch的详细&lt;a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-upgrade.html">文档&lt;/a>：
&lt;img src="https://www.tomars.cv/image/2016-12-22-01-10-21.jpg" alt="">
集群的升级可以细化到每个节点的升级过程，也有相关的&lt;a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rolling-upgrades.html#upgrade-node">帮助文档&lt;/a>。
官方还非常周到的提供了一个迁移助手&lt;a href="https://github.com/elastic/elasticsearch-migration/tree/2.x">elasticsearch-migration&lt;/a>，以插件的形式检测升级过程中需要注意的事项。
首先通过插件来做一些准备工作：
&lt;img src="https://www.tomars.cv/image/2016-12-08-14-58-42.jpg" alt="">
主要包含了：Cluster Checkup、Reindex Helper、Deprecation Logging 3个工具，分别点击可以查看对应的需要处理的事项。&lt;/p></description></item><item><title>MySQL到Elasticsearch的同步之路</title><link>https://www.tomars.cv/post/mysql%E5%88%B0elasticsearch%E7%9A%84%E5%90%8C%E6%AD%A5%E4%B9%8B%E8%B7%AF/</link><pubDate>Sun, 11 Dec 2016 13:25:50 +0000</pubDate><guid>https://www.tomars.cv/post/mysql%E5%88%B0elasticsearch%E7%9A%84%E5%90%8C%E6%AD%A5%E4%B9%8B%E8%B7%AF/</guid><description>&lt;p>六个月前写&lt;a href="http://suclogger.me/%E4%B9%B0%E5%A5%BD%E8%BD%A6%E6%90%9C%E7%B4%A2%E7%9A%84Elasticsearch%E5%AE%9E%E8%B7%B5%EF%BC%9A%E5%88%9D%E4%BD%93%E9%AA%8C/">买好车搜索的Elasticsearch实践：初体验&lt;/a>这篇文章的时候，我司刚刚迁移到Elasticserach，六个月之后的今天跟我最开始什么都不懂的时候搭起来的架构还是一模一样，这几天稍微有点时间，将Elasticsearch升级到了5.0.2，顺便整理了一下架构。
这一篇主要记录搜索与数据库同步的一些变化。&lt;/p>
&lt;!-- more -->
&lt;h2 id="洪荒时代">洪荒时代&lt;/h2>
&lt;p>Elasticsearch 2.0 之前，同步数据到Elasticsearch的功能由一个官方提供的插件（plugin）占领：river。通过实现不同的river插件，可以将数据从数据库，消息队列，nosql等等同步到Elasticsearch中，比如：&lt;a href="https://github.com/elastic/elasticsearch-river-rabbitmq">elasticsearch-river-rabbitmq&lt;/a>、&lt;a href="https://github.com/elastic/elasticsearch-river-couchdb">elasticsearch-river-couchdb&lt;/a>等等。
以plugin方式运行的形式如图：
&lt;img src="https://www.tomars.cv/image/2016-12-11-13-39-47.jpg" alt="">
可以看到，插件与Elasticsearch运行在同一个jvm上，显然这会导致一系列的问题，正如&lt;a href="https://www.elastic.co/blog/deprecating-rivers">Deprecating Rivers&lt;/a>中所说：&lt;/p></description></item><item><title>买好车搜索的Elasticsearch实践：初体验</title><link>https://www.tomars.cv/post/%E4%B9%B0%E5%A5%BD%E8%BD%A6%E6%90%9C%E7%B4%A2%E7%9A%84elasticsearch%E5%AE%9E%E8%B7%B5%E5%88%9D%E4%BD%93%E9%AA%8C/</link><pubDate>Thu, 23 Jun 2016 23:45:33 +0000</pubDate><guid>https://www.tomars.cv/post/%E4%B9%B0%E5%A5%BD%E8%BD%A6%E6%90%9C%E7%B4%A2%E7%9A%84elasticsearch%E5%AE%9E%E8%B7%B5%E5%88%9D%E4%BD%93%E9%AA%8C/</guid><description>&lt;!-- abstract -->
&lt;!-- 开始正文 -->
&lt;h1 id="回顾历史">回顾历史&lt;/h1>
&lt;p>直到今天，卖好车App的搜索依然采用的是阿里云的&lt;code>opensearch&lt;/code>，先来说说使用过程中的痛点。&lt;/p>
&lt;h2 id="阿里云opensearch的痛点">阿里云OpenSearch的痛点&lt;/h2>
&lt;h3 id="收费">收费&lt;/h3>
&lt;p>索引自创建完成就开始计费，就算或者没有新数据需要进入索引，依然在被收费。&lt;/p></description></item><item><title>Elasticsearch中文社区20160618杭州线下聚会纪要</title><link>https://www.tomars.cv/post/elasticsearch%E4%B8%AD%E6%96%87%E7%A4%BE%E5%8C%BA20160618%E6%9D%AD%E5%B7%9E%E7%BA%BF%E4%B8%8B%E8%81%9A%E4%BC%9A%E7%BA%AA%E8%A6%81/</link><pubDate>Sat, 18 Jun 2016 22:56:21 +0000</pubDate><guid>https://www.tomars.cv/post/elasticsearch%E4%B8%AD%E6%96%87%E7%A4%BE%E5%8C%BA20160618%E6%9D%AD%E5%B7%9E%E7%BA%BF%E4%B8%8B%E8%81%9A%E4%BC%9A%E7%BA%AA%E8%A6%81/</guid><description>&lt;!-- abstract -->
&lt;!-- 开始正文 -->
&lt;h2 id="汪兴elasticsearch结合hbase的应用">汪兴－Elasticsearch结合hbase的应用&lt;/h2>
&lt;p>介绍中使用的存储介质是HBase，我司目前还未达到迁移到NoSQL的数据量级，而且后面的分享中大都采用hadoop（hive，spark）作为mysql数据的全量备份，目前看来参考的价值不大。
不过后面也有一些具有参考意义的，比如提到的可以将若干条件作为一组进行分组条件逻辑查询，还涉及到备份方式的讨论，脑裂问题的解决。&lt;/p></description></item><item><title>elasticsearch上手指南</title><link>https://www.tomars.cv/post/elasticsearch%E4%B8%8A%E6%89%8B%E6%8C%87%E5%8D%97/</link><pubDate>Fri, 10 Jun 2016 19:09:26 +0000</pubDate><guid>https://www.tomars.cv/post/elasticsearch%E4%B8%8A%E6%89%8B%E6%8C%87%E5%8D%97/</guid><description>&lt;!-- abstract -->
&lt;!-- 开始正文 -->
&lt;h2 id="centos上安装elasticsearch">CentOS上安装elasticsearch&lt;/h2>
&lt;p>首先需要JAVA环境，这里不再详述。
在&lt;a href="https://www.elastic.co/downloads/elasticsearch">官网下载页面&lt;/a>找到RMP包的下载路径，通过wget命令下载安装包到本地：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">wget&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">download&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">elastic&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">co&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">elasticsearch&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">release&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">elasticsearch&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">distribution&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">rpm&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">elasticsearch&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mf">2.3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">elasticsearch&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mf">2.3&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mf">3.&lt;/span>&lt;span class="n">rpm&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行安装&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo rpm -ivh elasticsearch-2.3.3.rpm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>默认安装到&lt;code>/usr/share/elasticsearch/&lt;/code>，配置文件在&lt;code>/etc/elasticsearch&lt;/code>，init脚本在&lt;code>/etc/init.d/elasticsearch&lt;/code>。
添加为服务：&lt;/p></description></item><item><title>solr中文全词匹配的问题</title><link>https://www.tomars.cv/post/solr%E4%B8%AD%E6%96%87%E5%85%A8%E8%AF%8D%E5%8C%B9%E9%85%8D%E7%9A%84%E9%97%AE%E9%A2%98/</link><pubDate>Tue, 03 May 2016 22:36:13 +0000</pubDate><guid>https://www.tomars.cv/post/solr%E4%B8%AD%E6%96%87%E5%85%A8%E8%AF%8D%E5%8C%B9%E9%85%8D%E7%9A%84%E9%97%AE%E9%A2%98/</guid><description>&lt;!-- abstract -->
&lt;!-- 开始正文 -->
&lt;p>正常情况下的全词匹配可以用双引号括住需要检索的关键字,比如: q=name:&amp;ldquo;keyword&amp;rdquo;
但是如果某个字段用配置了中文分词器,用双引号括住无法查找到对应记录,只能用分词的结果的一部分做模糊查询,比如要精确查询 &amp;ldquo;美丽人生&amp;rdquo; ,用 q=name:&amp;ldquo;美丽人生&amp;rdquo; 是无法匹配到的,只能用 q=name:&amp;ldquo;美丽&amp;rdquo; ,或者 q=name:&amp;ldquo;人生&amp;rdquo; 才能匹配到.
中文分词配置如下&lt;/p></description></item></channel></rss>