<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on To Mars</title><link>https://www.tomars.cv/tags/java/</link><description>Recent content in Java on To Mars</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 24 Nov 2017 13:16:37 +0000</lastBuildDate><atom:link href="https://www.tomars.cv/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>一次线上Memory Leak的排查</title><link>https://www.tomars.cv/post/%E4%B8%80%E6%AC%A1%E7%BA%BF%E4%B8%8Amemory-leak%E7%9A%84%E6%8E%92%E6%9F%A5/</link><pubDate>Fri, 24 Nov 2017 13:16:37 +0000</pubDate><guid>https://www.tomars.cv/post/%E4%B8%80%E6%AC%A1%E7%BA%BF%E4%B8%8Amemory-leak%E7%9A%84%E6%8E%92%E6%9F%A5/</guid><description>&lt;p>很久很久没有更新博客了，最近遇到了一个线上内存泄露问题，简单记录一下排查的过程。&lt;/p>
&lt;!-- more -->
&lt;p>很早前就有小伙伴反馈调用我们的一个应用响应非常慢，往往更新到最新的部署代码之后就恢复正常了，所以一直没有重视这个问题。这次出现用户反馈，严重影响了正常业务。
现象是：&lt;/p></description></item><item><title>基于RocketMQ的JAVA消息服务</title><link>https://www.tomars.cv/post/%E5%9F%BA%E4%BA%8Erocketmq%E7%9A%84java%E6%B6%88%E6%81%AF%E6%9C%8D%E5%8A%A1/</link><pubDate>Thu, 10 Aug 2017 11:07:33 +0000</pubDate><guid>https://www.tomars.cv/post/%E5%9F%BA%E4%BA%8Erocketmq%E7%9A%84java%E6%B6%88%E6%81%AF%E6%9C%8D%E5%8A%A1/</guid><description>&lt;p>基于RocketMQ的JAVA消息服务&lt;/p>
&lt;!-- more -->
&lt;h2 id="java消息服务-jms基础">Java消息服务（ JMS）基础&lt;/h2>
&lt;blockquote>
&lt;p>Java消息服务（Java Message Service，JMS）应用程序接口是一个Java平台中关于面向消息中间件（MOM）的API，用于在两个应用程序之间，或分布式系统中发送消息，进行异步通信。 Java消息服务是一个与具体平台无关的API，绝大多数MOM提供商都对JMS提供支持。
Java消息服务- 维基百科，自由的百科全书
&lt;a href="https://zh.wikipedia.org/zh-hans/Java">https://zh.wikipedia.org/zh-hans/Java&lt;/a>消息服务&lt;/p></description></item><item><title>代码重构之：Mybatis批量写入</title><link>https://www.tomars.cv/post/%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84%E4%B9%8Bmybatis%E6%89%B9%E9%87%8F%E5%86%99%E5%85%A5/</link><pubDate>Thu, 22 Jun 2017 23:28:28 +0000</pubDate><guid>https://www.tomars.cv/post/%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84%E4%B9%8Bmybatis%E6%89%B9%E9%87%8F%E5%86%99%E5%85%A5/</guid><description>&lt;p>今天做了一点代码重构，以此为记。&lt;/p>
&lt;!-- more -->
&lt;p>业务场景是作为dubbo服务提供方，先到一张表写入数据后取出主键，以此主键为外键到另一张表写入数据。
因为处理时间过长，导致一系列的dubbo，nginx超时。&lt;/p></description></item><item><title>为什么这么慢？</title><link>https://www.tomars.cv/post/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%99%E4%B9%88%E6%85%A2/</link><pubDate>Fri, 09 Jun 2017 17:26:33 +0000</pubDate><guid>https://www.tomars.cv/post/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%99%E4%B9%88%E6%85%A2/</guid><description>&lt;p>昨天差点引发了一个严重线上bug，以此为记。&lt;/p>
&lt;!-- more -->
&lt;h2 id="背景">背景&lt;/h2>
&lt;p>我们现在采用的是logstash的jdbc插件同步mysql的数据。
这次上线的功能需要多关联一张表查询数据进入索引，直接体现在logstash jdbc配置文件中定义的SQL多了一个left join。&lt;/p></description></item><item><title>在JAVA中执行shell</title><link>https://www.tomars.cv/post/%E5%9C%A8java%E4%B8%AD%E6%89%A7%E8%A1%8Cshell/</link><pubDate>Sun, 08 Jan 2017 23:32:51 +0000</pubDate><guid>https://www.tomars.cv/post/%E5%9C%A8java%E4%B8%AD%E6%89%A7%E8%A1%8Cshell/</guid><description>&lt;p>今天抽时间解决了一个升级Elasticsearch后带来的一个问题。&lt;/p>
&lt;!-- more -->
&lt;p>起源是最初开发的一个用于维护搜索的项目&lt;code>infiniti&lt;/code>，主要功能是重建索引，创建备份，维护分词，排序控制等。其中重建索引的部分，原先是基于&lt;code>elasticsearch-jdbc&lt;/code>来做的，为了方便起见，从数据库导入数据的部分需要执行shell脚本。在&lt;a href="http://suclogger.me/MySQL%E5%88%B0Elasticsearch%E7%9A%84%E5%90%8C%E6%AD%A5%E4%B9%8B%E8%B7%AF">前面一篇&lt;/a>文章中也有说到，ES升级到5.0之后，数据库同步的部分也切换到了&lt;code>logstash&lt;/code>，同样是通过执行shell脚本的方式同步数据。&lt;/p></description></item><item><title>记一个线上bug的解决</title><link>https://www.tomars.cv/post/%E8%AE%B0%E4%B8%80%E4%B8%AA%E7%BA%BF%E4%B8%8Abug%E7%9A%84%E8%A7%A3%E5%86%B3/</link><pubDate>Fri, 27 May 2016 22:56:03 +0000</pubDate><guid>https://www.tomars.cv/post/%E8%AE%B0%E4%B8%80%E4%B8%AA%E7%BA%BF%E4%B8%8Abug%E7%9A%84%E8%A7%A3%E5%86%B3/</guid><description>&lt;!-- abstract -->
&lt;!-- 开始正文 -->
&lt;h2 id="背景">背景&lt;/h2>
&lt;p>我司的爬虫现在运行在一个通过ADSL拨号联网的VPS上，通过重新拨号切换IP来应对目标网站的防爬措施。&lt;/p>
&lt;h2 id="问题现象">问题现象&lt;/h2>
&lt;p>应用通过&lt;a href="https://github.com/alibaba/druid">druid&lt;/a>数据源连接到mysql保存数据，每次切换IP后，会通过下面这条简单sql尝试获取数据源连接：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">SELECT &amp;#39;1&amp;#39; FROM DUAL; 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但是通过查看日志这条sql每次都要等待长达17分钟才能执行完成：
&lt;img src="https://www.tomars.cv/image/3c91ebb0cbc84db0befa2f276df8fa19.jpg?r=59" alt="">&lt;/p></description></item></channel></rss>