<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IO on To Mars</title><link>https://www.tomars.cv/tags/io/</link><description>Recent content in IO on To Mars</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 13 Jun 2018 09:48:16 +0000</lastBuildDate><atom:link href="https://www.tomars.cv/tags/io/index.xml" rel="self" type="application/rss+xml"/><item><title>从锁死的RUNNABLE线程谈UNIX的I/O模型</title><link>https://www.tomars.cv/post/a-not-running-runnable/</link><pubDate>Wed, 13 Jun 2018 09:48:16 +0000</pubDate><guid>https://www.tomars.cv/post/a-not-running-runnable/</guid><description>&lt;p>记录一下JAVA IO库（java version &amp;ldquo;1.8.0_131&amp;rdquo;）的一个坑。&lt;/p>
&lt;!-- more -->
&lt;h2 id="背景">背景&lt;/h2>
&lt;p>背景是一个爬虫，实际执行网络请求是通过共用一个固定核心线程数的线程池（FixedThreadPool）做下载操作，但是每次运行一段时间后，线程池就被僵尸进程塞满了，表现为新提交到线程池的下载操作都无法被执行。&lt;/p></description></item></channel></rss>